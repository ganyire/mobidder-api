openapi: 3.0.3
info:
  title: 'Mobidder API'
  description: 'Mobidder API documentation'
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/v1/auth/register:
    post:
      summary: Register
      operationId: register
      description: 'Endpoint for registering a new user.'
      parameters: []
      responses:
        201:
          description: 'successful registration'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Account created successfully'
                  payload:
                    id: 01gzdvv25az6qyhgbm1jv0qa44
                    email: vincent35@wolff.com
                    name: 'Wendell Heller II'
                    phone: '+17372801899'
                    accountIsLocked: null
                    emailIsVerified: false
                    created_at:
                      for_human: '1 second ago'
                      for_machine: '2023-05-02 09:14:04'
                    role:
                      name: vendor-admin
                      display_name: 'Vendor Admin'
                      description: '{DESCRIPTION_OF_THE_ROLE}'
                    address:
                      id: 01gzdvv25epfw3h32zv7ksvjd7
                      street: '1234 Main St'
                      city: Nairobi
                      state: Nairobi
                      country: Kenya
                      zip_code: '00100'
                      created_at:
                        for_human: '1 second ago'
                        for_machine: '2023-05-02 09:14:04'
                    token: 2|e8eNukBzJrk8JVWi79SXdDUWF0KysDG1fkwdIjXU
                properties:
                  message:
                    type: string
                    example: 'Account created successfully'
                  payload:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01gzdvv25az6qyhgbm1jv0qa44
                      email:
                        type: string
                        example: vincent35@wolff.com
                      name:
                        type: string
                        example: 'Wendell Heller II'
                      phone:
                        type: string
                        example: '+17372801899'
                      accountIsLocked:
                        type: string
                        example: null
                      emailIsVerified:
                        type: boolean
                        example: false
                      created_at:
                        type: object
                        properties:
                          for_human:
                            type: string
                            example: '1 second ago'
                          for_machine:
                            type: string
                            example: '2023-05-02 09:14:04'
                      role:
                        type: object
                        properties:
                          name:
                            type: string
                            example: vendor-admin
                          display_name:
                            type: string
                            example: 'Vendor Admin'
                          description:
                            type: string
                            example: '{DESCRIPTION_OF_THE_ROLE}'
                      address:
                        type: object
                        properties:
                          id:
                            type: string
                            example: 01gzdvv25epfw3h32zv7ksvjd7
                          street:
                            type: string
                            example: '1234 Main St'
                          city:
                            type: string
                            example: Nairobi
                          state:
                            type: string
                            example: Nairobi
                          country:
                            type: string
                            example: Kenya
                          zip_code:
                            type: string
                            example: '00100'
                          created_at:
                            type: object
                            properties:
                              for_human:
                                type: string
                                example: '1 second ago'
                              for_machine:
                                type: string
                                example: '2023-05-02 09:14:04'
                      token:
                        type: string
                        example: 2|e8eNukBzJrk8JVWi79SXdDUWF0KysDG1fkwdIjXU
        400:
          description: 'generic error (400-500)'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: '{ERROR_MESSAGE}'
                  payload: null
                properties:
                  message:
                    type: string
                    example: '{ERROR_MESSAGE}'
                  payload:
                    type: string
                    example: null
        422:
          description: 'validation errors'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid data encountered'
                  payload:
                    '{FIELD_1}': '{Validation error for {FIELD_1}}'
                    '{FIELD_2}': '{Validation error for {FIELD_2}}'
                properties:
                  message:
                    type: string
                    example: 'Invalid data encountered'
                  payload:
                    type: object
                    properties:
                      '{FIELD_1}':
                        type: string
                        example: '{Validation error for {FIELD_1}}'
                      '{FIELD_2}':
                        type: string
                        example: '{Validation error for {FIELD_2}}'
      tags:
        - 'AUTH MANAGEMENT'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user. Must not be greater than 255 characters.'
                  example: 'Bailey Yost'
                email:
                  type: string
                  description: 'The email of the user. Must be a valid email address. Must not be greater than 255 characters.'
                  example: bzboncak@hotmail.com
                password:
                  type: string
                  description: 'The password of the user.'
                  example: Lenny@007
                password_confirmation:
                  type: string
                  description: 'The password confirmation of the user.'
                  example: Lenny@007
                phone:
                  type: string
                  description: 'The phone number of the user. Must not be greater than 255 characters.'
                  example: '+14049264334'
                role:
                  type: string
                  description: 'The role of the user. Must be one of <code>super-admin</code>, <code>vendor</code>, <code>customer</code>, or <code>vendor-admin</code> Must not be greater than 255 characters.'
                  example: vendor-admin
                street:
                  type: string
                  description: 'The street of the user.'
                  example: '1234 Main St'
                city:
                  type: string
                  description: 'The city of the user. This field is required when <code>street</code> is present.'
                  example: Nairobi
                state:
                  type: string
                  description: 'The state of the user.'
                  example: Nairobi
                zip_code:
                  type: string
                  description: 'The zip code of the user.'
                  example: '00100'
                country:
                  type: string
                  description: 'The country of the user. This field is required when <code>street</code> is present.'
                  example: Kenya
              required:
                - name
                - email
                - password
                - password_confirmation
                - role
      security: []
  /api/v1/auth/login:
    post:
      summary: Login
      operationId: login
      description: 'Endpoint for signing in a user.'
      parameters: []
      responses:
        200:
          description: 'Successful login'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: null
                  payload:
                    id: 01gzdvv25az6qyhgbm1jv0qa44
                    email: vincent35@wolff.com
                    name: 'Wendell Heller II'
                    phone: '+17372801899'
                    accountIsLocked: null
                    emailIsVerified: false
                    created_at:
                      for_human: '1 second ago'
                      for_machine: '2023-05-02 09:14:04'
                    role:
                      name: vendor-admin
                      display_name: 'Vendor Admin'
                      description: '{DESCRIPTION_OF_THE_ROLE}'
                    address:
                      id: 01gzdvv25epfw3h32zv7ksvjd7
                      street: '1234 Main St'
                      city: Nairobi
                      state: Nairobi
                      country: Kenya
                      zip_code: '00100'
                      created_at:
                        for_human: '1 second ago'
                        for_machine: '2023-05-02 09:14:04'
                    token: 2|e8eNukBzJrk8JVWi79SXdDUWF0KysDG1fkwdIjXU
                properties:
                  message:
                    type: string
                    example: null
                  payload:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01gzdvv25az6qyhgbm1jv0qa44
                      email:
                        type: string
                        example: vincent35@wolff.com
                      name:
                        type: string
                        example: 'Wendell Heller II'
                      phone:
                        type: string
                        example: '+17372801899'
                      accountIsLocked:
                        type: string
                        example: null
                      emailIsVerified:
                        type: boolean
                        example: false
                      created_at:
                        type: object
                        properties:
                          for_human:
                            type: string
                            example: '1 second ago'
                          for_machine:
                            type: string
                            example: '2023-05-02 09:14:04'
                      role:
                        type: object
                        properties:
                          name:
                            type: string
                            example: vendor-admin
                          display_name:
                            type: string
                            example: 'Vendor Admin'
                          description:
                            type: string
                            example: '{DESCRIPTION_OF_THE_ROLE}'
                      address:
                        type: object
                        properties:
                          id:
                            type: string
                            example: 01gzdvv25epfw3h32zv7ksvjd7
                          street:
                            type: string
                            example: '1234 Main St'
                          city:
                            type: string
                            example: Nairobi
                          state:
                            type: string
                            example: Nairobi
                          country:
                            type: string
                            example: Kenya
                          zip_code:
                            type: string
                            example: '00100'
                          created_at:
                            type: object
                            properties:
                              for_human:
                                type: string
                                example: '1 second ago'
                              for_machine:
                                type: string
                                example: '2023-05-02 09:14:04'
                      token:
                        type: string
                        example: 2|e8eNukBzJrk8JVWi79SXdDUWF0KysDG1fkwdIjXU
        400:
          description: 'Generic error (400-500)'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: '{ERROR_MESSAGE}'
                  payload: null
                properties:
                  message:
                    type: string
                    example: '{ERROR_MESSAGE}'
                  payload:
                    type: string
                    example: null
        401:
          description: 'Invalid login credentials'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Invalid login credentials'
                  payload: null
                properties:
                  message:
                    type: string
                    example: 'Invalid login credentials'
                  payload:
                    type: string
                    example: null
      tags:
        - 'AUTH MANAGEMENT'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email credential. Must be a valid email address.'
                  example: schinner.fidel@example.org
                password:
                  type: string
                  description: 'The password of the user.'
                  example: Lenny@007
              required:
                - email
                - password
      security: []
  /api/v1/auth/send-email-verification-code:
    post:
      summary: 'Sent email verification code'
      operationId: sentEmailVerificationCode
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Verification code has been sent to your email address'
                  payload: null
                properties:
                  message:
                    type: string
                    example: 'Verification code has been sent to your email address'
                  payload:
                    type: string
                    example: null
        400:
          description: 'Email address has already been verified'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Your email address has already been verified'
                  payload: null
                properties:
                  message:
                    type: string
                    example: 'Your email address has already been verified'
                  payload:
                    type: string
                    example: null
      tags:
        - 'AUTH MANAGEMENT'
  /api/v1/auth/verify-email-address:
    post:
      summary: 'Verify email address'
      operationId: verifyEmailAddress
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Your email address has been verified successfully'
                  payload: null
                properties:
                  message:
                    type: string
                    example: 'Your email address has been verified successfully'
                  payload:
                    type: string
                    example: null
      tags:
        - 'AUTH MANAGEMENT'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email_verification_token:
                  type: string
                  description: 'Email verification token. Must be 6 characters.'
                  example: '123456'
              required:
                - email_verification_token
  /api/v1/auth/change-password:
    post:
      summary: 'Change password'
      operationId: changePassword
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
          schema:
            type: string
      responses:
        200:
          description: 'Password changed successfully'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password changed successfully'
                  payload: null
                properties:
                  message:
                    type: string
                    example: 'Password changed successfully'
                  payload:
                    type: string
                    example: null
        400:
          description: 'Generic error (400-500)'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: '{ERROR_MESSAGE}'
                  payload: null
                properties:
                  message:
                    type: string
                    example: '{ERROR_MESSAGE}'
                  payload:
                    type: string
                    example: null
        422:
          description: 'Validation errors'
          content:
            text/plain:
              schema:
                type: string
                example: storage/responses/validation_error.json
      tags:
        - 'AUTH MANAGEMENT'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  description: 'The old password.'
                  example: Oldpassword10
                password:
                  type: string
                  description: 'The new password.'
                  example: Newpassword10
                password_confirmation:
                  type: string
                  description: 'The new password confirmation.'
                  example: Newpassword10
              required:
                - oldPassword
                - password
                - password_confirmation
  /api/v1/auth/change-email:
    post:
      summary: 'Change email address'
      operationId: changeEmailAddress
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Email address changed successfully'
                  payload: lenny@app.com
                properties:
                  message:
                    type: string
                    example: 'Email address changed successfully'
                  payload:
                    type: string
                    example: lenny@app.com
      tags:
        - 'AUTH MANAGEMENT'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'New email address to set. Must be a valid email address. Must not be greater than 255 characters.'
                  example: hauck.jasen@example.org
                password:
                  type: string
                  description: "User's current password."
                  example: "v{4YgED'_BhW=D~Rpb"
              required:
                - email
                - password
  /api/v1/auth/send-password-reset-code:
    post:
      summary: 'Send password reset code'
      operationId: sendPasswordResetCode
      description: ''
      parameters: []
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password reset code sent successfully. Check your email.'
                  payload: null
                properties:
                  message:
                    type: string
                    example: 'Password reset code sent successfully. Check your email.'
                  payload:
                    type: string
                    example: null
        422:
          description: 'Validation errors'
          content:
            text/plain:
              schema:
                type: string
                example: storage/responses/validation_error.json
      tags:
        - 'AUTH MANAGEMENT'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email address of the user. Must be a valid email address.'
                  example: hester92@example.net
              required:
                - email
      security: []
  /api/v1/auth/reset-password:
    post:
      summary: 'Reset password'
      operationId: resetPassword
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Password reset successfully.'
                  payload: null
                properties:
                  message:
                    type: string
                    example: 'Password reset successfully.'
                  payload:
                    type: string
                    example: null
        422:
          description: 'Validation errors'
          content:
            text/plain:
              schema:
                type: string
                example: storage/responses/validation_error.json
      tags:
        - 'AUTH MANAGEMENT'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Email. Must be a valid email address.'
                  example: karlee.terry@example.com
                password:
                  type: string
                  description: Password.
                  example: "E~WKhp|#'F"
                password_confirmation:
                  type: string
                  description: 'Password confirmation.'
                  example: "E~WKhp|#'F"
                token:
                  type: string
                  description: 'Token that you received in your email.'
                  example: 5301669d-eacb-3c25-bd9b-78ab7d62e5fa
              required:
                - email
                - password
                - password_confirmation
                - token
  /api/v1/auth/refresh-token:
    post:
      summary: 'Refresh Token'
      operationId: refreshToken
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
          schema:
            type: string
      responses:
        200:
          description: 'successful refresh'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Token refreshed successfully'
                  payload: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                properties:
                  message:
                    type: string
                    example: 'Token refreshed successfully'
                  payload:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
      tags:
        - 'AUTH MANAGEMENT'
  /api/v1/businesses:
    post:
      summary: 'Create new business'
      operationId: createNewBusiness
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: null
                  name: Howe-Witting
                  email: jose97@goodwin.com
                  phone: '+14302419697'
                  website: 'http://www.torp.org/quae-nisi-non-perspiciatis-quo.html'
                  logo: null
                  created_at: null
                properties:
                  id:
                    type: string
                    example: null
                  name:
                    type: string
                    example: Howe-Witting
                  email:
                    type: string
                    example: jose97@goodwin.com
                  phone:
                    type: string
                    example: '+14302419697'
                  website:
                    type: string
                    example: 'http://www.torp.org/quae-nisi-non-perspiciatis-quo.html'
                  logo:
                    type: string
                    example: null
                  created_at:
                    type: string
                    example: null
      tags:
        - 'BUSINESS '
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Business name. Must not be greater than 255 characters.'
                  example: 'Reichert PLC'
                email:
                  type: string
                  description: 'Business email. Must be a valid email address. Must not be greater than 255 characters.'
                  example: dandre.hauck@shields.com
                phone:
                  type: string
                  description: 'Business phone number. Must not be greater than 255 characters.'
                  example: 458-442-3517
                website:
                  type: string
                  description: 'Business website. Must be a valid URL. Must not be greater than 255 characters.'
                  example: 'http://brakus.com/'
                logo:
                  type: string
                  format: binary
                  description: 'Business logo. Must be a file.'
                street:
                  type: string
                  description: 'Business address: street.'
                  example: '8237 Nikolaus Port'
                city:
                  type: string
                  description: 'Business address: city. This field is required when <code>street</code> is present.'
                  example: Erniefurt
                state:
                  type: string
                  description: 'Business address: state or province.'
                  example: qui
                zip_code:
                  type: string
                  description: 'Business address: zip code.'
                  example: '09172'
                country:
                  type: string
                  description: 'Business address: country. This field is required when <code>street</code> is present.'
                  example: Grenada
              required:
                - name
                - email
  /api/v1/categories:
    post:
      summary: 'Create new product category'
      operationId: createNewProductCategory
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
          schema:
            type: string
      responses: {  }
      tags:
        - CATEGORY
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of product category.'
                  example: Manufacturing
                description:
                  type: string
                  description: 'The description of the category.'
                  example: 'Animi nihil sapiente quia animi architecto ea veritatis.'
              required:
                - name
  /api/v1/products:
    post:
      summary: 'Create product'
      operationId: createProduct
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
          schema:
            type: string
      responses: {  }
      tags:
        - PRODUCT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the product. Must not be greater than 255 characters.'
                  example: commodi
                average_price:
                  type: number
                  description: 'The average price of the product.'
                  example: 100.0
                description:
                  type: string
                  description: 'The description of the product.'
                  example: 'Exercitationem qui ex architecto distinctio iure quis a ea.'
                unit_of_measure:
                  type: string
                  description: 'The unit of measure of the product. Must not be greater than 255 characters.'
                  example: kg
                category_id:
                  type: string
                  description: 'The category id of the product.'
                  example: 5820a78e-930e-32fc-8b50-68c6b0987aa9
              required:
                - name
                - average_price
                - category_id
tags:
  -
    name: 'AUTH MANAGEMENT'
    description: "\nAPIs for managing authentication"
  -
    name: 'BUSINESS '
    description: "\nAPIs for managing business model and its related models"
  -
    name: CATEGORY
    description: "\nAPIs for managing product categories and its related models"
  -
    name: PRODUCT
    description: "\nAPIs for managing products and its related models"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
