name: PRODUCT
description: |-

  APIs for managing products and its related models
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/products
    metadata:
      groupName: PRODUCT
      groupDescription: |-

        APIs for managing products and its related models
      subgroup: ''
      subgroupDescription: ''
      title: 'Create product'
      description: 'Endpoint for creating a new product.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 38|NCg3209E9muRYFLCqqlBOs9cFll3yrcgSBxw0IqQ'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the product. Must not be greater than 255 characters.'
        required: true
        example: aut
        type: string
        custom: []
      average_price:
        name: average_price
        description: 'The average price of the product.'
        required: true
        example: 100.0
        type: number
        custom: []
      description:
        name: description
        description: 'The description of the product.'
        required: false
        example: 'Et voluptates modi est esse.'
        type: string
        custom: []
      unit_of_measure:
        name: unit_of_measure
        description: 'The unit of measure of the product. Must not be greater than 255 characters.'
        required: false
        example: kg
        type: string
        custom: []
      category_id:
        name: category_id
        description: 'The category id of the product.'
        required: true
        example: 5912c4cb-950a-37a4-91bf-d5354a7d181c
        type: string
        custom: []
    cleanBodyParameters:
      name: aut
      average_price: 100.0
      description: 'Et voluptates modi est esse.'
      unit_of_measure: kg
      category_id: 5912c4cb-950a-37a4-91bf-d5354a7d181c
    fileParameters: []
    responses:
      -
        status: 201
        content: |
          {
              "message": "Product created successfully",
              "payload": {
                  "id": "01h1pg6bn3svmb7w13rptdr09q",
                  "name": "porro",
                  "average_price": "100",
                  "unit_of_measure": "kg",
                  "description": "Consequuntur et numquam omnis magnam iure dolores sint.",
                  "created_at": {
                      "for_human": "1 second ago",
                      "for_machine": "2023-05-30 14:15:05"
                  },
                  "category": {
                      "id": "01h1pg5sfcvm8crrx6qpn2eqfb",
                      "name": "FMG",
                      "slug": "fmg",
                      "description": "Quidem incidunt impedit quis aut veritatis ut.",
                      "created_at": {
                          "for_human": "19 seconds ago",
                          "for_machine": "2023-05-30 14:14:46"
                      }
                  }
              }
          }
        headers: []
        description: 'successful creation'
        custom: []
      -
        status: 400
        content: |
          {
              "message": "{ERROR_MESSAGE}",
              "payload": null
          }
        headers: []
        description: 'generic error (400-500)'
        custom: []
      -
        status: 422
        content: |
          {
              "message": "Invalid data encountered",
              "payload": {
                  "{FIELD_1}": "{Validation error for {FIELD_1}}",
                  "{FIELD_2}": "{Validation error for {FIELD_2}}"
              }
          }
        headers: []
        description: 'validation errors'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer df5hZ1eavDaEV66b4k3cg8P'
    controller: null
    method: null
    route: null
    custom: []
