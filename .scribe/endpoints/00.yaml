name: 'AUTH MANAGEMENT'
description: |-

  APIs for managing authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/auth/register
    metadata:
      groupName: 'AUTH MANAGEMENT'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: 'Endpoint for registering a new user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user. Must not be greater than 255 characters.'
        required: true
        example: 'Bailey Yost'
        type: string
        custom: []
      email:
        name: email
        description: 'The email of the user. Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: bzboncak@hotmail.com
        type: string
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: Lenny@007
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation of the user.'
        required: true
        example: Lenny@007
        type: string
        custom: []
      phone:
        name: phone
        description: 'The phone number of the user. Must not be greater than 255 characters.'
        required: false
        example: '+14049264334'
        type: string
        custom: []
      role:
        name: role
        description: 'The role of the user. Must be one of <code>super-admin</code>, <code>vendor</code>, <code>customer</code>, or <code>vendor-admin</code> Must not be greater than 255 characters.'
        required: true
        example: vendor-admin
        type: string
        custom: []
      street:
        name: street
        description: 'The street of the user.'
        required: false
        example: '1234 Main St'
        type: string
        custom: []
      city:
        name: city
        description: 'The city of the user. This field is required when <code>street</code> is present.'
        required: false
        example: Nairobi
        type: string
        custom: []
      state:
        name: state
        description: 'The state of the user.'
        required: false
        example: Nairobi
        type: string
        custom: []
      zip_code:
        name: zip_code
        description: 'The zip code of the user.'
        required: false
        example: '00100'
        type: string
        custom: []
      country:
        name: country
        description: 'The country of the user. This field is required when <code>street</code> is present.'
        required: false
        example: Kenya
        type: string
        custom: []
    cleanBodyParameters:
      name: 'Bailey Yost'
      email: bzboncak@hotmail.com
      password: Lenny@007
      password_confirmation: Lenny@007
      phone: '+14049264334'
      role: vendor-admin
      street: '1234 Main St'
      city: Nairobi
      state: Nairobi
      zip_code: '00100'
      country: Kenya
    fileParameters: []
    responses:
      -
        status: 201
        content: |
          {
              "message": "Account created successfully",
              "payload": {
                  "id": "01gzdvv25az6qyhgbm1jv0qa44",
                  "email": "vincent35@wolff.com",
                  "name": "Wendell Heller II",
                  "phone": "+17372801899",
                  "accountIsLocked": null,
                  "emailIsVerified": false,
                  "created_at": {
                      "for_human": "1 second ago",
                      "for_machine": "2023-05-02 09:14:04"
                  },
                  "role": {
                      "name": "vendor-admin",
                      "display_name": "Vendor Admin",
                      "description": "{DESCRIPTION_OF_THE_ROLE}"
                  },
                  "address": {
                      "id": "01gzdvv25epfw3h32zv7ksvjd7",
                      "street": "1234 Main St",
                      "city": "Nairobi",
                      "state": "Nairobi",
                      "country": "Kenya",
                      "zip_code": "00100",
                      "created_at": {
                          "for_human": "1 second ago",
                          "for_machine": "2023-05-02 09:14:04"
                      }
                  },
                  "token": "2|e8eNukBzJrk8JVWi79SXdDUWF0KysDG1fkwdIjXU"
              }
          }
        headers: []
        description: 'successful registration'
        custom: []
      -
        status: 400
        content: |
          {
              "message": "{ERROR_MESSAGE}",
              "payload": null
          }
        headers: []
        description: 'generic error (400-500)'
        custom: []
      -
        status: 422
        content: |
          {
              "message": "Invalid data encountered",
              "payload": {
                  "{FIELD_1}": "{Validation error for {FIELD_1}}",
                  "{FIELD_2}": "{Validation error for {FIELD_2}}"
              }
          }
        headers: []
        description: 'validation errors'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/login
    metadata:
      groupName: 'AUTH MANAGEMENT'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'Endpoint for signing in a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email credential. Must be a valid email address.'
        required: true
        example: schinner.fidel@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'The password of the user.'
        required: true
        example: Lenny@007
        type: string
        custom: []
    cleanBodyParameters:
      email: schinner.fidel@example.org
      password: Lenny@007
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "message": null,
              "payload": {
                  "id": "01gzdvv25az6qyhgbm1jv0qa44",
                  "email": "vincent35@wolff.com",
                  "name": "Wendell Heller II",
                  "phone": "+17372801899",
                  "accountIsLocked": null,
                  "emailIsVerified": false,
                  "created_at": {
                      "for_human": "1 second ago",
                      "for_machine": "2023-05-02 09:14:04"
                  },
                  "role": {
                      "name": "vendor-admin",
                      "display_name": "Vendor Admin",
                      "description": "{DESCRIPTION_OF_THE_ROLE}"
                  },
                  "address": {
                      "id": "01gzdvv25epfw3h32zv7ksvjd7",
                      "street": "1234 Main St",
                      "city": "Nairobi",
                      "state": "Nairobi",
                      "country": "Kenya",
                      "zip_code": "00100",
                      "created_at": {
                          "for_human": "1 second ago",
                          "for_machine": "2023-05-02 09:14:04"
                      }
                  },
                  "token": "2|e8eNukBzJrk8JVWi79SXdDUWF0KysDG1fkwdIjXU"
              }
          }
        headers: []
        description: 'Successful login'
        custom: []
      -
        status: 400
        content: |
          {
              "message": "{ERROR_MESSAGE}",
              "payload": null
          }
        headers: []
        description: 'Generic error (400-500)'
        custom: []
      -
        status: 401
        content: |-
          {
               "message": "Invalid login credentials",
               "payload": null
          }
        headers: []
        description: 'Invalid login credentials'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/send-email-verification-code
    metadata:
      groupName: 'AUTH MANAGEMENT'
      groupDescription: |-

        APIs for managing authentication
      subgroup: 'Email verification'
      subgroupDescription: 'Endpoints for managing email verification'
      title: 'Sent email verification code'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Verification code has been sent to your email address",
            "payload": null
          }
        headers: []
        description: Success
        custom: []
      -
        status: 400
        content: |-
          {
             "message": "Your email address has already been verified",
             "payload": null
          }
        headers: []
        description: 'Email address has already been verified'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3adcabPk5gVEf6vD68hZe14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/verify-email-address
    metadata:
      groupName: 'AUTH MANAGEMENT'
      groupDescription: |-

        APIs for managing authentication
      subgroup: 'Email verification'
      subgroupDescription: ''
      title: 'Verify email address'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email_verification_token:
        name: email_verification_token
        description: 'Email verification token. Must be 6 characters.'
        required: true
        example: '123456'
        type: string
        custom: []
    cleanBodyParameters:
      email_verification_token: '123456'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Your email address has been verified successfully",
             "payload": null
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3Zf1heakgaV8vEb46d5cP6D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/change-password
    metadata:
      groupName: 'AUTH MANAGEMENT'
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Change password'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      oldPassword:
        name: oldPassword
        description: 'The old password.'
        required: true
        example: Oldpassword10
        type: string
        custom: []
      password:
        name: password
        description: 'The new password.'
        required: true
        example: Newpassword10
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The new password confirmation.'
        required: true
        example: Newpassword10
        type: string
        custom: []
    cleanBodyParameters:
      oldPassword: Oldpassword10
      password: Newpassword10
      password_confirmation: Newpassword10
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "message": "Password changed successfully",
             "payload": null
          }
        headers: []
        description: 'Password changed successfully'
        custom: []
      -
        status: 400
        content: |
          {
              "message": "{ERROR_MESSAGE}",
              "payload": null
          }
        headers: []
        description: 'Generic error (400-500)'
        custom: []
      -
        status: 422
        content: storage/responses/validation_error.json
        headers: []
        description: 'Validation errors'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer De8fPZ6Ehg51ab6dkv43acV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/change-email
    metadata:
      groupName: 'AUTH MANAGEMENT'
      groupDescription: |-

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Change email address'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'New email address to set. Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: hauck.jasen@example.org
        type: string
        custom: []
      password:
        name: password
        description: "User's current password."
        required: true
        example: "v{4YgED'_BhW=D~Rpb"
        type: string
        custom: []
    cleanBodyParameters:
      email: hauck.jasen@example.org
      password: "v{4YgED'_BhW=D~Rpb"
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "Email address changed successfully",
            "payload": "lenny@app.com"
          }
        headers: []
        description: Success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1kaPfdcb38Zv45e6EDhVa6g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/send-password-reset-code
    metadata:
      groupName: 'AUTH MANAGEMENT'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Send password reset code'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address of the user. Must be a valid email address.'
        required: true
        example: hester92@example.net
        type: string
        custom: []
    cleanBodyParameters:
      email: hester92@example.net
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Password reset code sent successfully. Check your email.",
           "payload": null
          }
        headers: []
        description: Success
        custom: []
      -
        status: 422
        content: storage/responses/validation_error.json
        headers: []
        description: 'Validation errors'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/reset-password
    metadata:
      groupName: 'AUTH MANAGEMENT'
      groupDescription: |2-
         @unauthenticated

        APIs for managing authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset password'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email. Must be a valid email address.'
        required: true
        example: karlee.terry@example.com
        type: string
        custom: []
      password:
        name: password
        description: Password.
        required: true
        example: "E~WKhp|#'F"
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Password confirmation.'
        required: true
        example: "E~WKhp|#'F"
        type: string
        custom: []
      token:
        name: token
        description: 'Token that you received in your email.'
        required: true
        example: 5301669d-eacb-3c25-bd9b-78ab7d62e5fa
        type: string
        custom: []
    cleanBodyParameters:
      email: karlee.terry@example.com
      password: "E~WKhp|#'F"
      password_confirmation: "E~WKhp|#'F"
      token: 5301669d-eacb-3c25-bd9b-78ab7d62e5fa
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Password reset successfully.",
          "payload": null
          }
        headers: []
        description: Success
        custom: []
      -
        status: 422
        content: storage/responses/validation_error.json
        headers: []
        description: 'Validation errors'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8EgZ3dPcf6k1v64eahDV5ab'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/refresh-token
    metadata:
      groupName: 'AUTH MANAGEMENT'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Refresh Token'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 4|qRYeEW1rvWPN2Sjgtko2FF0gE6gUzc9lcqdUDWGO'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "Token refreshed successfully",
               "payload": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
          }
        headers: []
        description: 'successful refresh'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer efbgZv6E6aP58h4k3dcaVD1'
    controller: null
    method: null
    route: null
    custom: []
